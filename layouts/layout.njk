<!DOCTYPE html>
<html data-theme="light" lang="{{ lang or language or siteConfig.language }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=10">
    {% if themeConfig.color %}
    <meta name="theme-color" content="{{ themeConfig.color }}">
    <meta name="msapplication-TileColor" content="{{ themeConfig.color }}">
    {% endif %}
    {% if themeConfig.googleVerification %}
    <meta name="google-site-verification" content="{{ themeConfig.googleVerification }}">
    {% endif %}
    {% if keywords %}
    <meta name="keywords" content="{{ keywords.join(", ") }}">
    {% elif themeConfig.keywords %}
    <meta name="keywords" content="{{ themeConfig.keywords.join(", ") }}">
    {% endif %}
    {% if siteConfig.description %}
    <meta name="description" content="{{ siteConfig.description }}">
    {% endif %}
    <link rel="canonical" href="{{ getURL(docPath) }}">
    {% if themeConfig.favicon.appleTouchIcon %}
    <link rel="apple-touch-icon" sizes="180x180" href="{{ getPath(themeConfig.favicon.appleTouchIcon) }}">
    {% endif %}
    {% if themeConfig.favicon.androidChromeLarge %}
    <link rel="icon" type="image/png" sizes="192x192" href="{{ getPath(themeConfig.favicon.androidChromeLarge) }}">
    {% endif %}
    {% if themeConfig.favicon.medium %}
    <link rel="icon" type="image/png" sizes="32x32" href="{{ getPath(themeConfig.favicon.medium) }}">
    {% endif %}
    {% if themeConfig.favicon.small %}
    <link rel="icon" type="image/png" sizes="16x16" href="{{ getPath(themeConfig.favicon.small) }}">
    {% endif %}
    {% if themeConfig.favicon.safariPinnedTab %}
    <link rel="mask-icon" href="{{ getPath(themeConfig.favicon.safariPinnedTab) }}" color="{{ themeConfig.color }}">
    {% endif %}
    {% if themeConfig.favicon.androidManifest %}
    <link rel="manifest" href="{{ getPath(themeConfig.favicon.androidManifest) }}">
    {% endif %}
    {% if themeConfig.favicon.msBrowserConfig %}
    <meta name="msapplication-config" content="{{ getPath(themeConfig.favicon.msBrowserConfig) }}">
    {% endif %}
    {% if themeConfig.favicon.fallback %}
    <link rel="shortcut icon" type="image/x-icon" href="{{ getPath(themeConfig.favicon.fallback) }}">
    {% endif %}
    {% if siteConfig.feed.enable %}
    <link rel="alternate" href="{{ getPath(siteConfig.feed.path) }}" title="{{ siteConfig.title }}" type="application/atom+xml" />
    {% endif %}
    {% if themeConfig.customFont.enable and themeConfig.customFont.link %}
    <link rel="stylesheet" type="text/css" href="{{ themeConfig.customFont.link }}">
    {% endif %}
    <link rel="stylesheet" type="text/css" href="{% if themeConfig.libCDN.enable and themeConfig.libCDN.normalize %}{{ themeConfig.libCDN.normalize }}{% else %}{{ getPath("css/normalize.css") }}{% endif %}">
    <link rel="stylesheet" type="text/css" href="{{ getPath("css/index.css") }}">
    {% if themeConfig.sidebar !== false %}
    <link rel="stylesheet" type="text/css" href="{{ getPath("css/sidebar.css") }}">
    {% endif %}
    {% block css %}{% endblock %}
    <link rel="stylesheet" type="text/css" href="{{ getPath("css/custom.css") }}">
    <link rel="stylesheet" type="text/css" href="{% if themeConfig.libCDN.enable and themeConfig.libCDN[themeConfig.highlight] %}{{ themeConfig.libCDN[themeConfig.highlight] }}{% else %}{{ getPath("css/" + themeConfig.highlight + ".css") }}{% endif %}">
    <link rel="stylesheet" type="text/css" href="{% if themeConfig.libCDN.enable and themeConfig.libCDN.lightGallery.css %}{{ themeConfig.libCDN.lightGallery.css }}{% else %}{{ getPath("css/lightgallery.min.css") }}{% endif %}">
    <link rel="stylesheet" type="text/css" href="{% if themeConfig.libCDN.enable and themeConfig.libCDN.spinkit %}{{ themeConfig.libCDN.spinkit }}{% else %}{{ getPath("css/spinkit.css") }}{% endif %}">
    {# You should not set `defer` to `index.js` because other scripts depends it for `documentReady()`! #}
    <script type="text/javascript" src="{{ getPath("js/index.js") }}"></script>
    <script defer type="text/javascript" src="{{ getPath("js/scrollspy.js") }}"></script>
    <script defer type="text/javascript" src="{% if themeConfig.libCDN.enable and themeConfig.libCDN.lightGallery.js %}{{ themeConfig.libCDN.lightGallery.js }}{% else %}{{ getPath("js/lightgallery.min.js") }}{% endif %}"></script>
    <script defer type="text/javascript" src="{% if themeConfig.libCDN.enable and themeConfig.libCDN.lgFullscreen %}{{ themeConfig.libCDN.lgFullscreen }}{% else %}{{ getPath("js/lg-fullscreen.min.js") }}{% endif %}"></script>
    <script defer type="text/javascript" src="{% if themeConfig.libCDN.enable and themeConfig.libCDN.lgHash %}{{ themeConfig.libCDN.lgHash }}{% else %}{{ getPath("js/lg-hash.min.js") }}{% endif %}"></script>
    <script defer type="text/javascript" src="{% if themeConfig.libCDN.enable and themeConfig.libCDN.lgPager %}{{ themeConfig.libCDN.lgPager }}{% else %}{{ getPath("js/lg-pager.min.js") }}{% endif %}"></script>
    <script defer type="text/javascript" src="{% if themeConfig.libCDN.enable and themeConfig.libCDN.lgThumbnail %}{{ themeConfig.libCDN.lgThumbnail }}{% else %}{{ getPath("js/lg-thumbnail.min.js") }}{% endif %}"></script>
    <script defer type="text/javascript" src="{% if themeConfig.libCDN.enable and themeConfig.libCDN.lgZoom %}{{ themeConfig.libCDN.lgZoom }}{% else %}{{ getPath("js/lg-zoom.min.js") }}{% endif %}"></script>
    <script defer type="text/javascript" src="{% if themeConfig.libCDN.enable and themeConfig.libCDN.clipboard %}{{ themeConfig.libCDN.clipboard }}{% else %}{{ getPath("js/clipboard.min.js") }}{% endif %}"></script>
    <script defer type="text/javascript" src="{% if themeConfig.libCDN.enable and themeConfig.libCDN.fontAwesome %}{{ themeConfig.libCDN.fontAwesome }}{% else %}{{ getPath("js/fontawesome-all.min.js") }}{% endif %}"></script>
    {% if themeConfig.busuanzi %}
    <script defer type="text/javascript" src="{% if themeConfig.libCDN.enable and themeConfig.libCDN.busuanzi %}{{ themeConfig.libCDN.busuanzi }}{% else %}{{ getPath("js/busuanzi.pure.mini.js") }}{% endif %}"></script>
    {% endif %}
    {% if themeConfig.mathjax.cdn and themeConfig.mathjax.enable %}
    {% if themeConfig.mathjax.global or mathjax %}
    <script defer type="text/javascript" src="{{ themeConfig.mathjax.cdn }}"></script>
    <script type="text/x-mathjax-config">
      MathJax.Hub.Config({
        "tex2jax": {
          "inlineMath": [["$", "$"], ["\\(", "\\)"]],
          "processEscapes": true,
          "skipTags": ["script", "noscript", "style", "textarea", "pre", "code"]
        }
      });
    </script>
    <script type="text/x-mathjax-config">
      MathJax.Hub.Queue(function() {
        var all = MathJax.Hub.getAllJax();
        for (var i = 0; i < all.length; ++i) {
          all[i].SourceElement().parentNode.className += " has-jax";
        }
      });
    </script>
    {% endif %}
    {% endif %}
    <script type="text/javascript">
      documentReady(function () {
        var themeToggle = document.getElementById("theme-toggle");
        var preferenceQuery = window.matchMedia("(prefers-color-scheme: dark)");
        var theme = localStorage.getItem("theme");
        var checkPreference = function (query) {
          if (query.matches) {
            themeToggle.innerHTML = "<i class=\"far fa-moon\" aria-label=\"{{ __("accessibility.themeDark") }}\"></i>";
            document.documentElement.setAttribute("data-theme", "dark");
            localStorage.setItem("theme", "dark");
          } else {
            themeToggle.innerHTML = "<i class=\"far fa-sun\" aria-label=\"{{ __("accessibility.themeLight") }}\"></i>";
            document.documentElement.setAttribute("data-theme", "light");
            localStorage.setItem("theme", "light");
          }
        }
        // Check user's choice from localStorage.
        if (theme === "dark") {
          themeToggle.innerHTML = "<i class=\"far fa-moon\" aria-label=\"{{ __("accessibility.themeDark") }}\"></i>";
          document.documentElement.setAttribute("data-theme", "dark");;
        } else if (theme === "light") {
          themeToggle.innerHTML = "<i class=\"far fa-sun\" aria-label=\"{{ __("accessibility.themeLight") }}\"></i>";
          document.documentElement.setAttribute("data-theme", "light")
        } else {
          // Init from user's system settings if no choice.
          checkPreference(preferenceQuery);
        }
        // User changed system settings, update.
        preferenceQuery.addListener(checkPreference);
        // User changed website settings, update.
        themeToggle.onclick = function () {
          var theme = document.documentElement.getAttribute("data-theme");
          if (theme === "dark") {
            themeToggle.innerHTML = "<i class=\"far fa-sun\" aria-label=\"{{ __("accessibility.themeLight") }}\"></i>";
            document.documentElement.setAttribute("data-theme", "light");
            localStorage.setItem("theme", "light");
          } else {
            themeToggle.innerHTML = "<i class=\"far fa-moon\" aria-label=\"{{ __("accessibility.themeDark") }}\"></i>";
            document.documentElement.setAttribute("data-theme", "dark");
            localStorage.setItem("theme", "dark");
          }
        }
        elementsEach(
          document.querySelectorAll(".post pre code figure.highlight"),
          function (e, i) {
            var lang = e.parentNode.className;
            e.insertAdjacentElement("beforebegin", createElementFromString([
              "<div class=\"code-titlebar\">",
                "<div class=\"titlebar-left\">",
                  "<button class=\"copy\" aria-label=\"{{ __("clipboard.copy") }}\"><i class=\"far fa-copy\"></i></button>",
                "</div>",
                "<div class=\"titlebar-center\">",
                  lang.length ? lang.toUpperCase() : "{{ __("code") }}",
                "</div>",
                "<div class=\"titlebar-right\">",
                  "<button class=\"button-dot dot-minimize\" aria-label=\"Decoration\"></button>",
                  "<button class=\"button-dot dot-maximize\" aria-label=\"Decoration\"></button>",
                  "<button class=\"button-dot dot-close\" aria-label=\"Decoration\"></button>",
                "</div>",
              "</div>"
            ].join("")));
          }
        );
        var cb = new ClipboardJS("button.copy", {
          "target": function (trigger) {
              // Get target element by DOM API.
              // trigger.parentNode.parentNode is code-titlebar.
              // nextElementSibling is figure.highlight, lastChild is pre.code.
              return trigger.parentNode.parentNode.nextElementSibling.lastChild;
          }
        });
        cb.on("success", function (e) {
          e.clearSelection();
          var trigger = e.trigger;
          // Change button text as a user tip.
          trigger.innerHTML = "<i class=\"far fa-check-square\"></i>";
          trigger.classList.add("copied");
          // Change button text back;
          setTimeout(function () {
            trigger.innerHTML = "<i class=\"far fa-copy\"></i>";
            trigger.classList.remove("copied");
          }, 1500);
        });
      });
    </script>
    {% block js %}{% endblock %}
    <script defer type="text/javascript" src="{{ getPath("js/custom.js") }}"></script>
    <title>{% block title %}{% endblock %}</title>
  </head>
  <body itemscope itemtype="http://schema.org/WebPage">
    {% include "includes/header.njk" %}
    <main id="main" class="main">
      <div class="container">
        <div class="main-container">
          <div class="content">
            {% block content %}{% endblock %}
          </div>
          {# Sidebar can be `left`, `right` or `false`. #}
          {% if themeConfig.sidebar !== false %}
          {% include "includes/sidebar.njk" %}
          {% endif %}
        </div>
      </div>
    </main>
    {% include "includes/footer.njk" %}
  </body>
</html>
<!-- Page built by Hikaru v{{ getVersion() }} at {{ moment.tz(momenttz.guess()).format("YYYY-MM-DD ddd HH:mm:ss z") }}. -->
