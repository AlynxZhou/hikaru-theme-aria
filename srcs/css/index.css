html {
  /* Scrollbar for document. */
  scrollbar-width: thin;
  scrollbar-color: var(--color-scrollbar) var(--color-scrollbar-background);
}

* {
  box-sizing: border-box;
}

::selection, ::-moz-selection {
  color: var(--color-selection-font);
  background: var(--color-selection-background);
}

::-webkit-scrollbar {
  width: 0.5em;
  height: 0.5em;
  background: var(--color-scrollbar-background);
}

::-webkit-scrollbar-track {
  background: 0 0;
}

::-webkit-scrollbar-thumb {
  background: var(--color-scrollbar);
  border-radius: 0.25em;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--color-scrollbar-hover);
}

::-webkit-scrollbar-corner {
  background: var(--color-scrollbar-corner);
}

::-webkit-scrollbar-resizer {
  background: var(--color-scrollbar-resizer);
}

body {
  transition: color var(--transition-duration) var(--transition-timing-function), background var(--transition-duration) var(--transition-timing-function);
  /**
   * Use separate font properties because `line-height` is also included in
   * `font` property, I don't want to reset `line-height` for all elements using
   * another `font-family` or `font-size`.
   */
  font-family: var(--font-all);
  font-size: var(--font-size);
  line-height: 2;
  color: var(--color-font);
  background: var(--color-background);
  display: flex;
  flex-direction: column;
  /* Never use `space-between` here, header and main cannot be splitted. */
  justify-content: flex-start;
  align-items: stretch;
  width: 100%;
  height: 100%;
  /* You phone is too long and too narrow, let the whole page scroll. */
  min-width: var(--width-body-min);
  /* Take the whole browser window, this is required for Holy Grail. */
  min-height: 100vh;
  overflow: auto;
  scroll-behavior: smooth;
}

ol, ul {
  padding-left: 2em;
}

/* Don't set border color explicitly if it can inherits font color. */
a {
  position: relative;
  color: var(--color-link-font);
  text-decoration: none;
  border-bottom: var(--border-bottom-width-link) dotted;
  transition: color var(--transition-duration) var(--transition-timing-function), border-bottom var(--transition-duration) var(--transition-timing-function);
}

a:hover {
  color: var(--color-link-hover-font);
  border-bottom: var(--border-bottom-width-link) solid;
}

a:active {
  top: 0.1em;
}

table, img {
  max-width: 100%;
}

a.img-link {
  border-bottom: none;
}

a.img-link > img {
  transition: box-shadow var(--transition-duration) var(--transition-timing-function);
  border: 0.15em solid var(--color-quote-font);
}

a.img-link:hover {
  border-bottom: none;
}

a.img-link:hover > img {
  box-shadow: var(--box-shadow) var(--color-box-shadow);
}

a#top, a#more {
  position: static;
  border: none;
  margin: 0;
  padding: 0;
}

a#top:hover, a#more:hover {
  border: none;
}

span.caption {
  color: var(--color-quote-font);
}

a.button, button.button {
  /* Button should be inline-block so it can be scaled. */
  display: inline-block;
  position: relative;
  transition: box-shadow var(--transition-duration) var(--transition-timing-function), transform var(--transition-duration) var(--transition-timing-function);
  text-decoration: none;
  border-radius: var(--corner-radius);
  color: var(--color-button-font);
  background: var(--color-button-background);
  border: 0.1em solid var(--color-button-border);
  line-height: inherit;
}

a.button:hover, button.button:hover {
  box-shadow: var(--box-shadow) var(--color-box-shadow);
  transform: scale(1.05, 1.05);
}

a.button:active, button.button:active {
  top: 0.1em;
}

hr {
  height: 0.3em;
  border: none;
  margin: 1.5em 0;
  background: repeating-linear-gradient(-45deg, var(--color-hr-background), var(--color-hr-background) 0.25em, transparent 0.25em, transparent 0.5em);
}

div.card hr, article.card hr {
  margin: 1.5em calc(-1 * var(--padding-card));
}

article table {
  /* Make table center. */
  margin: 0 auto;
}

article th {
  padding: 0.4em 0.7em;
  border: 0.1em solid var(--color-table-head-border);
}

article td {
  padding: 0.4em 0.7em;
  border: 0.1em solid var(--color-table-border);
}

article thead > tr {
  background: var(--color-table-head-background);
}

article tbody > tr {
  background: var(--color-table-odd-row-background);
}

article tbody > tr > td:nth-child(2n) {
  background: var(--color-table-even-row-background);
}

article tbody > tr:nth-child(2n) {
  background: var(--color-table-even-row-background);
}

article tbody > tr:nth-child(2n) > td:nth-child(2n) {
  background: var(--color-table-odd-row-background);
}

code, kbd {
  padding: 0 0.25em;
  color: var(--color-code-font);
  background: var(--color-code-background);
  /* Don't collapse multiple spaces in code. */
  white-space: pre-wrap;
  word-wrap: break-word;
  border-radius: var(--corner-radius);
  font-family: var(--font-code);
  font-feature-settings: "liga" 0;
}

pre {
  font-family: var(--font-code);
  font-size: var(--font-size);
  font-feature-settings: "liga" 0;
}

div.code-titlebar {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  text-align: center;
  /* border-radius: var(--corner-radius) var(--corner-radius) 0 0; */
  color: var(--color-code-block-titlebar-font);
  background: var(--color-code-block-titlebar-background);
  padding: 0 0.25em;
  margin: 0 calc(-1 * var(--padding-card));
}

div.titlebar-left, div.titlebar-right {
  flex: 0 0 auto;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

div.titlebar-center {
  flex: 1 1 auto;
}

button.copy {
  color: var(--color-button-copy-font);
  background: var(--color-code-block-titlebar-background);
  text-decoration: none;
  border: none;
  padding: 0;
  margin: 0.25em;
  transition: color var(--transition-duration) var(--transition-timing-function);
}

button.copy:hover {
  color: var(--color-button-copy-hover-font);
  border: none;
}

button.copy.copied {
  color: var(--color-button-copy-hover-font);
}

button.button-dot {
  text-decoration: none;
  border: none;
  padding: 0;
  margin: 0.25em;
  border-radius: 50%;
  width: 1em;
  height: 1em;
  transition: opacity var(--transition-duration) var(--transition-timing-function);
}

button.button-dot:hover {
  opacity: 0.7;
  border: none;
}

button.dot-close {
  background: var(--color-button-dot-close-background);
}

button.dot-maximize {
  background: var(--color-button-dot-maximize-background);
}

button.dot-minimize {
  background: var(--color-button-dot-minimize-background);
}

figure.code-block {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: stretch;
  /* border-left: 0.1em solid var(--color-code-block-border); */
  /* border-bottom: 0.1em solid var(--color-code-block-border); */
  /* border-right: 0.1em solid var(--color-code-block-border); */
  padding: 0 0.5em;
  margin: 0 calc(-1 * var(--padding-card));
}

/* A default color if Hikaru's builtin hljs is disabled. */
figure.code-block:not(.hljs) {
  color: var(--color-code-block-font);
  background: var(--color-code-block-background);
}

figure.code-block > pre {
  margin: 0;
}

figure.code-block > pre.gutter {
  flex: 0 0 auto;
  text-align: right;
  padding: 0.5em;
  /**
   * Only show border of gutter, so when user choose no gutter in config,
   * there is no border for code.
   */
  border-right: 0.1em dotted;
}

figure.code-block > pre.code {
  flex: 1 1 auto;
  overflow: auto;
  padding: 0.5em;
  scrollbar-width: thin;
  scrollbar-color: var(--color-scrollbar) var(--color-scrollbar-background);
}

figure.code-block > pre.code > code {
  margin: 0;
  padding: 0;
  color: inherit;
  background: transparent;
  /**
   * Because we use `white-space: pre-wrap;` to prevent white spaces collaspe,
   * we have to set `white-space: pre;` here to prevent line break inside code
   * blocks.
   */
  white-space: pre;
  word-wrap: normal;
  border-radius: 0;
}

/* hljs don't touch my styles except color. */
code.hljs {
  display: inline;
  overflow: visible;
}

blockquote {
  margin: 1em 0;
  /* This is relative to inner text. */
  padding: 0 1em;
  color: var(--color-quote-font);
  border-left: 0.25em solid var(--color-quote-font);
}

blockquote > p {
  padding: 0;
  margin: 0;
}

blockquote.center-quote, blockquote.centerquote {
  margin: 0.5em calc(-1 * var(--padding-card));
  padding: 0.5em 10%;
  color: var(--color-quote-font);
  border-left: none;
  border-top: 0.2em solid var(--color-quote-font);
  border-bottom: 0.2em solid var(--color-quote-font);
  text-align: center;
}

blockquote.center-quote > p,
blockquote.center-quote > div,
blockquote.centerquote > p,
blockquote.centerquote > div {
  text-align: center;
}

/* For user. */
div.center {
  text-align: center;
  padding: 0 10%;
}

/* Take the whole line without margin like alert. */
/* You'd better use img inside div, because it's hard to control img width. */
div.enlarge, img.enlarge {
  display: block;
  text-align: center;
  margin: 0.5em calc(-1 * var(--padding-card));
}

img.enlarge {
  /* Because we have `max-width: 100%;` for img, unset it. */
  max-width: none;
  /* Seems no better way. */
  width: calc(100% + 2 * var(--padding-card));
}

div.alert-red, div.alert-green, div.alert-blue {
  text-align: center;
  /* Use this to get a nice break of card. */
  margin: 0.5em calc(-1 * var(--padding-card));
  padding: 0.5em 10%;
  border-width: 0 0.5em;
  border-style: solid;
  /* border-radius: var(--corner-radius); */
}

/* alert has no dark theme. */
div.alert-red a, div.alert-green a, div.alert-blue a {
  color: var(--color-light-link-font);
}

div.alert-red a:hover, div.alert-green a:hover, div.alert-blue a:hover {
  color: var(--color-light-link-hover-font);
  border-bottom: var(--border-bottom-width-link) solid;
}

div.alert-red {
  color: var(--color-alert-red-font);
  border-color: var(--color-alert-red-border);
  background-color: var(--color-alert-red-background);
}

div.alert-green {
  color: var(--color-alert-green-font);
  border-color: var(--color-alert-green-border);
  background-color: var(--color-alert-green-background);
}

div.alert-blue {
  color: var(--color-alert-blue-font);
  border-color: var(--color-alert-blue-border);
  background-color: var(--color-alert-blue-background);
}

div.sk-wave {
  font-size: 1rem;
  margin: 2em auto;
  height: 3em;
  text-align: center;
}

div.sk-rect {
  background: var(--color-sk-wave-background);
  height: 100%;
  width: 0.5em;
  display: inline-block;
  animation: sk-wave-stretch-delay 1.2s infinite var(--transition-timing-function);
  animation-delay: -1.2s;
}

div.sk-rect:nth-child(2n) {
  animation-delay: -1.1s;
}

div.sk-rect:nth-child(3n) {
  animation-delay: -1.0s;
}

div.sk-rect:nth-child(4n) {
  animation-delay: -0.9s;
}

div.sk-rect:nth-child(5n) {
  animation-delay: -0.8s;
}

@keyframes sk-wave-stretch-delay {
  0%, 40%, 100% {
    transform: scaleY(0.4);
  }
  20% {
    transform: scaleY(1);
  }
}

div.card, article.card {
  display: block;
  transition: box-shadow var(--transition-duration) var(--transition-timing-function);
  background: var(--color-card-background);
  border-radius: var(--corner-radius);
  padding: 0.5em var(--padding-card);
  margin: 0.5em;
}

div.card:hover, article.card:hover {
  box-shadow: var(--box-shadow) var(--color-box-shadow);
}

i.bi {
  margin: 0 var(--margin-icon);
}

article.animate {
  animation: var(--transition-duration) flip forwards;
  opacity: 0;
  transform-origin: 50%;
  transform: rotateX(180deg);
}

@keyframes flip {
  0% {
    opacity: 0;
    transform: rotateX(180deg);
  }
  100% {
    opacity: 1;
    transform: rotateX(0);
  }
}

header.header {
  flex: 0 0 auto;
  /* Give some space for main search bar offset. */
  padding-bottom: var(--height-search);
  margin-bottom: 0;
  background: var(--color-header-background);
  color: var(--color-header-font);
}

div.header-container {
  display: flex;
  justify-content: space-between;
  /* Let title and logo sit on nav bar. */
  align-items: flex-end;
  padding: 1em;
}

div.header-title {
  text-align: left;
  flex: 1 1 auto;
  color: var(--color-title-font);
  /* To make it shrink. */
  overflow: auto;
}

a.root {
  position: static;
  color: var(--color-title-font);
  text-decoration: none;
  border-bottom: none;
}

a.root:hover {
  color: var(--color-title-font);
  border-bottom: none;
}

div.title {
  font-family: var(--font-title);
  font-size: 2rem;
  font-weight: bold;
}

div.subtitle {
  font-family: var(--font-subtitle);
  font-size: 1.5rem;
  font-style: italic;
}

div.logo {
  text-align: right;
  flex: 0 0 auto;
}

img.logo-image {
  display: inline-block;
  max-height: 5em;
}

nav.nav {
  padding: 0 0.5em;
  background: var(--color-nav-background);
  /* Use rem because main should have the same shadow. */
  box-shadow: 0 -0.5rem 1rem 0.5rem var(--color-box-shadow);
  border-radius: var(--corner-radius-main) var(--corner-radius-main) 0 0;
  line-height: 1.5;
  /* This is a flex container of menu and buttons. */
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  /* Stretch menu to full height for beautiful active style. */
  align-items: stretch;
}

/**
 * Browser always ignore white spaces between blocks but not inline elements.
 * Use flex and block for ul and li to ignore white spaces Nunjucks puts here.
 */
ul.menu {
  display: flex;
  flex: 1 1 auto;
  flex-direction: row;
  align-items: stretch;
  justify-content: flex-start;
  list-style: none;
  padding: 0;
  margin: 0;
  overflow: auto;
  scrollbar-width: thin;
  scrollbar-color: var(--color-scrollbar) var(--color-scrollbar-background);
}

li.menu-item {
  /* Don't stretch. */
  flex: 0 0 auto;
  text-align: center;
  display: block;
  margin: 0 0.1em;
}

a.menu-link {
  position: static;
  display: block;
  font-size: 1.5rem;
  padding: 0.5em;
  color: var(--color-nav-link-font);
  text-decoration: none;
  transition: color var(--transition-duration) var(--transition-timing-function), background var(--transition-duration) var(--transition-timing-function);
  border-bottom: none;
}

a.menu-link:hover {
  color: var(--color-nav-link-hover-font);
  background: var(--color-nav-hover-background);
  border-bottom: none;
}

a.menu-link.current {
  font-weight: bold;
}

button.nav-toggle, button.theme-toggle {
  /* Buttons don't stretch. */
  flex: 0 0 auto;
  text-align: center;
  border: none;
  padding: 0 0.5em;
  margin: 0;
  background: var(--color-nav-background);
  font-size: 2rem;
  cursor: pointer;
  color: var(--color-nav-link-font);
  transition: color var(--transition-duration) var(--transition-timing-function), background var(--transition-duration) var(--transition-timing-function);
}

button.nav-toggle:hover, button.theme-toggle:hover {
  color: var(--color-nav-link-hover-font);
  background: var(--color-nav-hover-background);
}

button.nav-toggle {
  display: none;
}

button.theme-toggle {
  display: block;
}

main.main {
  flex: 1 1 auto;
  font-family: var(--font-main);
  font-size: var(--font-size);
  /* It's 2022 and calc() should work everywhere, and use -1 to do negative. */
  margin-top: calc(-1 * var(--height-search));
  margin-bottom: 1.5em;
}

div.main-container {
  background: var(--color-main-background);
  box-shadow: 0 -0.5rem 1rem 0.5rem var(--color-box-shadow);
  /**
   * Only setting `border-radius` here is not enough, because sidebar has its
   * own background.
   * Using `overflow: auto;` can round sidebar, but it creates a new problem
   * that `position: sticky;` won't work.
   * So the only way to do that is also setting `border-radius` for sidebar.
   */
  border-radius: 0 0 var(--corner-radius-main) var(--corner-radius-main);
  /* This is flex container for content and sidebar. */
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: stretch;
  padding: 0;
  margin: 0;
}

div.content {
  /* Grow and shrink and take all available space. */
  flex: 1 1 auto;
  /* Content has no background so don't set this. */
  /* border-radius: 0 0 var(--corner-radius-main) 0; */
  /**
   * See <https://stackoverflow.com/questions/36247140/why-dont-flex-items-shrink-past-content-size>.
   * Let parent decide child width.
   */
  overflow: auto;
}

div.page-counter {
  text-align: center;
  font-size: 1.5rem;
  margin: 0.83em 0;
  font-weight: bold
}

nav.pagination {
  padding: 0.5em;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: stretch;
  justify-content: center;
}

/**
 * Don't set border color explicitly, or we will have conflict for current and
 * hover styles.
 */
a.page-number {
  display: block;
  /* Don't stretch. */
  flex: 0 0 auto;
  font-size: 1.25rem;
  padding: 0.3em 0.5em;
  margin: 0.1em 0.5em;
  text-decoration: none;
  color: var(--color-link-font);
  border-bottom: 0.15em solid;
  transition: color var(--transition-duration) var(--transition-timing-function);
}

a.page-number:hover {
  color: var(--color-link-hover-font);
}

a.page-number.current {
  border-top: 0.1em solid;
}

nav.page-nav {
  padding: 0 1em;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

div.page-nav-item {
  flex: 1 1 50%;
  font-size: 1.2rem;
}

a.page-nav-link {
  position: relative;
  display: inline-flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  text-decoration: none;
  border-bottom: none;
}

span.page-nav-title {
  flex: 1 1 auto;
  overflow: auto;
  margin: 0.3em;
}

a.page-nav-link:active {
  top: 0.1em;
}

div.page-nav-next {
  text-align: left;
}

div.page-nav-prev {
  text-align: right;
}

header.post-header {
  text-align: center;
}

div.page-title, div.post-title {
  text-align: center;
  /* Looks like h1. */
  font-size: 2rem;
  font-weight: bold;
}

a.title-link {
  position: relative;
  /* Height of `::after` needs inline-block. */
  display: inline-block;
  text-decoration: none;
  border-bottom: none;
  color: var(--color-font);
}

a.title-link::after {
  content: " ";
  position: absolute;
  width: 100%;
  height: 0.1em;
  bottom: 0;
  left: 0;
  transition: transform var(--transition-duration) var(--transition-timing-function);
  transform: scaleX(0);
  background: var(--color-font);
  /* Not sure why but this prevents the disappear animation. */
  /* visibility: hidden; */
}

a.title-link:hover::after {
  visibility: visible;
  transform: scaleX(1);
}

a.title-link:active {
  top: 0.1em;
}

div.post-title-simple {
  /* Looks like h1, but without margin. */
  font-size: 2rem;
  font-weight: bold;
}

a.heading-link {
  position: static;
  border-bottom: none;
}

a.heading-link:hover {
  border-bottom: none;
}

a.heading-link::before {
  content: "#";
  margin-right: 0.3em;
}

footer.post-footer {
  text-align: center;
}

div.tags-cloud {
  text-align: center;
}

a.post-tag {
  margin: 0.1em 0.5em;
  display: inline-block;
  background: var(--color-button-red-background);
  border: 0.1em solid var(--color-button-red-border);
  /* Because we have icon on left and icon always have margin, so balance it. */
  padding-right: var(--margin-icon);
}

a.post-tag:nth-child(2n) {
  background: var(--color-button-green-background);
  border: 0.1em solid var(--color-button-green-border);
}

a.post-tag:nth-child(3n) {
  background: var(--color-button-blue-background);
  border: 0.1em solid var(--color-button-blue-border);
}

div.reward {
  margin: 1em;
  text-align: center;
  color: var(--color-reward-font);
}

button.reward-button {
  cursor: pointer;
  border: none;
  padding: 0.3em 1em;
  margin: 0.5em 0;
  background: var(--color-button-red-background);
  border: 0.1em solid var(--color-button-red-border);
}

div.qr {
  text-align: center;
}

div.qr-block {
  padding: 0.5em;
  display: inline-block;
}

img.qr-image {
  width: 10em;
  margin: 0 auto;
  display: block;
}

aside.sidebar {
  background: var(--color-sidebar-background);
  background: var(--url-sidebar-background);
  /* Don't grow, don't shrink. */
  flex: 0 0 var(--width-sidebar);
  border-radius: 0 0 var(--corner-radius-main) 0;
  padding: 0;
}

/* Replace hr color. */
aside.sidebar hr {
  background: repeating-linear-gradient(-45deg, var(--color-hr-sidebar-background), var(--color-hr-sidebar-background) 0.25em, transparent 0.25em, transparent 0.5em);
}

div.search {
  height: var(--height-search);
  display: block;
  text-align: center;
  color: var(--color-search-font);
  background: var(--color-search-background);
  padding-top: var(--padding-top-search);
}

input.search-input {
  width: 70%;
  height: 1.8em;
  border: none;
  color: var(--color-search-font);
  background: var(--color-search-background);
  border-bottom: 0.1em dotted;
  transition: border-bottom var(--transition-duration) var(--transition-timing-function);
}

input.search-input:focus {
  border-bottom: 0.1em solid;
}

input.search-input::placeholder {
  color: var(--color-search-font);
  opacity: 0.7;
}

button.search-submit {
  position: static;
  transition: color var(--transition-duration) var(--transition-timing-function);
  color: var(--color-search-font);
  background: var(--color-search-background);
  text-decoration: none;
  padding: 0;
  margin: 0.25em;
  border: none;
}

button.search-submit:hover {
  color: var(--color-search-hover-font);
  border: none;
}

div.info {
  text-align: center;
}

img.author-avatar {
  /* Keep in center. */
  width: 90%;
  margin: 1em auto;
  display: block;
  border: 0.3em solid white;
  border-radius: 50%;
  transition: box-shadow var(--transition-duration) var(--transition-timing-function), transform 1s var(--transition-timing-function);
}

img.author-avatar:hover {
  box-shadow: var(--box-shadow) var(--color-box-shadow);
  transform: rotateY(720deg);
}

div.author-name {
  color: var(--color-author-name-font);
  font-size: 1.8rem;
  margin: 0.5em 0;
}

div.author-description {
  color: var(--color-author-description-font);
  font-size: 1.2rem;
  margin: 0.5em 0;
}

div.site-count {
  display: flex;
  justify-content: center;
  align-items: stretch;
  width: 100%;
  margin: 1em 0;
  text-align: center;
}

div.count-block {
  flex: 1 1 auto;
  overflow: auto;
  padding: 0.1em;
  border-left: var(--border-bottom-width-link) solid var(--color-quote-font);
  border-right: var(--border-bottom-width-link) solid var(--color-quote-font);
}

div.count-block:first-child {
  border-left: none;
}

div.count-block:last-child {
  border-right: none;
}

div.site-count-title {
  margin: 0;
  font-size: 1.2rem;
}

div.rss {
  margin: 1em 0;
  padding: 0;
}

a.rss-link {
  display: block;
  font-size: 1.5rem;
  color: var(--color-button-font);
  background: var(--color-button-red-background);
  border: 0.1em solid var(--color-button-red-border);
}

div.sidebar-item {
  margin: 1em;
}

div.sidebar-sticky {
  position: sticky;
  top: 0;
  padding-bottom: 1em;
}

a.toc-link.current {
  font-weight: bold;
}

footer.footer {
  flex: 0 0 auto;
  color: var(--color-footer-font);
  background: var(--color-footer-background);
}

footer.footer a {
  position: relative;
  color: var(--color-footer-link-font);
  text-decoration: none;
  border-bottom: var(--border-bottom-width-link) dotted;
  transition: color var(--transition-duration) var(--transition-timing-function), border-bottom var(--transition-duration) var(--transition-timing-function);
}

footer.footer a:hover {
  color: var(--color-footer-link-hover-font);
  border-bottom: var(--border-bottom-width-link) solid;
}

footer.footer a:active {
  top: 0.1em;
}

div.footer-container {
  display: flex;
  justify-content: space-between;
  /* I want footer's text sit on the same line. */
  align-items: flex-end;
  padding: 1em;
}

div.footer-left, div.footer-right {
  /* Let them share space. */
  flex: 1 1 50%;
}

div.footer-left {
  text-align: left;
}

div.footer-right {
  text-align: right;
}

div.custom-info {
  width: 100%;
}

div.back-to-top {
  display: block;
  text-align: center;
}

footer.footer a.back-to-top {
  border: none;
  transition: color var(--transition-duration) var(--transition-timing-function);
  color: var(--color-link-font);
  background: var(--color-background);
  display: inline-block;
  padding: 0 0.75em;
  border-radius: 0 0 var(--corner-radius) var(--corner-radius);
  font-size: 2rem;
  line-height: 1.2;
}

footer.footer a.back-to-top:hover {
  color: var(--color-link-hover-font);
  border: none;
}

footer.footer a.back-to-top:active {
  top: 0;
}

/* Also check `mobile.css` for shrinking. */
/* Ultra-wide monitor and normal monitor. */
div.container {
  /* Too wide is hard to read so set max width for ultra-wide monitor. */
  max-width: var(--max-width-container);
  width: 80%;
  height: 100%;
  padding: 0;
  margin: 0 auto;
}
